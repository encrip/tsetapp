package com.example.databasetest;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.text.DateFormat;
import java.util.Date;
import java.util.HashMap;

public class WithdrawActivity extends AppCompatActivity {
    EditText Method, AC_number, coinsEt;
    Button Submit;
    TextView coinsTv;


    FirebaseAuth auth;
    FirebaseUser user;
    DatabaseReference reference;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_withdraw);

        init();
        auth = FirebaseAuth.getInstance();
        user = auth.getCurrentUser();
        reference = FirebaseDatabase.getInstance().getReference().child( "Users" );

        Submit.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String m = Method.getText().toString();
                String a = AC_number.getText().toString();
                String c = coinsEt.getText().toString();

                if (m.isEmpty() || a.isEmpty() || c.isEmpty()){

                    Toast.makeText(WithdrawActivity.this, "This Field Can't to be Empty..", Toast.LENGTH_SHORT).show();
                }else {

                    reference.child(user.getUid()).addValueEventListener(new ValueEventListener() {
                        @Override
                        public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                            String c = dataSnapshot.child("coins").getValue().toString();

                            int correctCoins =  Integer.parseInt(c);
                            String Edit_Coins = coinsEt.getText().toString();
                            coinsTv.setText(c);


                            if (correctCoins<Integer.parseInt(Edit_Coins)){

                                Toast.makeText(WithdrawActivity.this, "Low Balance Check Your Account", Toast.LENGTH_SHORT).show();
                            }else if (Integer.parseInt(Edit_Coins)<5000){

                                Toast.makeText(WithdrawActivity.this, "Must be 5000 coins or Higher ", Toast.LENGTH_SHORT).show();
                            }else {
                                
                                request(correctCoins, Edit_Coins);
                                finish();
                            }
                        }

                        @Override
                        public void onCancelled(@NonNull DatabaseError databaseError) {

                        }
                    });
                }
            }
        });
    }

    private void request(int correctCoins, String Edit_Coins) {
        int updateCoins = correctCoins-Integer.parseInt(Edit_Coins);
        String date = DateFormat.getDateInstance().format(new Date());
        String time = DateFormat.getTimeInstance().format(new Date());

        HashMap<String, Object> map = new HashMap<>();
        map.put("coins", updateCoins);
        map.put("Bank", Method.getText().toString());
        map.put("AC_NO", AC_number.getText().toString());
        map.put("date", date);
        map.put("time", time);
        map.put("WithdrawCoins", Edit_Coins);

        reference.child(user.getUid()).updateChildren(map).addOnCompleteListener(new OnCompleteListener<Void>() {
            @Override
            public void onComplete(@NonNull Task<Void> task) {
                if (task.isSuccessful()){
                    Toast.makeText(WithdrawActivity.this, "request has been send to your accoun soon", Toast.LENGTH_SHORT).show();
                }else {
                    Toast.makeText(WithdrawActivity.this, "Error", Toast.LENGTH_SHORT).show();
                }
            }
        });


    }

    private void init()
    {
        Method = findViewById(R.id.Bank_name);
        AC_number = findViewById(R.id.ac_num);
        coinsEt = findViewById(R.id.Amount);
        Submit = findViewById(R.id.smtBtn);
        coinsTv = findViewById(R.id.earning_coins);
    }
}
